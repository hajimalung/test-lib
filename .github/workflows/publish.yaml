name: npm publish
on:
  push:
    branches:
      - main

jobs:
  version_increment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkour code
        uses: actions/checkout@v1
        with:
          ref: main

      - name: Read and update package.json
        id: update_version
        run: |
          # Read the current version
          CURRENT_VERSION=$(jq -r '.version' package.json)
          echo "Current version: $CURRENT_VERSION"

          # Split the version into components
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"

          # Increment the patch version
          PATCH=$((PATCH + 1))

          # Construct new version
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"

          # Update package.json with the new version
          jq --arg new_version "$NEW_VERSION" '.version = $new_version' package.json > tmp.json && mv tmp.json package.json
      - name: Commit changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add package.json
          git commit -m "Update package version to $NEW_VERSION" || echo "No changes to commit"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:${{ github.ref }}

  publistonpm:
    needs: [version_increment]
    runs-on: ubuntu-latest
    steps:
      - name: Checkour code
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v4

      - name: Installing Dependencies
        run: npm install

      - name: Building library
        run: npm run build-lib

      - name: navigating to dis folder
        run: cd dist/hajimalung/test-lib

      - name: creating dot npmrc file
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH }}" >> .npmrc

      - run: find . -name ".npmrc"

      - run: npm run publish-lib
